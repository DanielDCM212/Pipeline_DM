{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json2",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "Json3",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Union1"
				},
				{
					"name": "Select1"
				}
			],
			"script": "source(output(\n\t\tActive as integer,\n\t\tCity as string,\n\t\tCityCode as string,\n\t\tConfirmed as integer,\n\t\tCountry as string,\n\t\tCountryCode as string,\n\t\tDate as timestamp,\n\t\tDeaths as integer,\n\t\tLat as boolean,\n\t\tLon as boolean,\n\t\tProvince as string,\n\t\tRecovered as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> source1\nsource(output(\n\t\tActive as integer,\n\t\tCity as string,\n\t\tCityCode as string,\n\t\tConfirmed as integer,\n\t\tCountry as string,\n\t\tCountryCode as string,\n\t\tDate as timestamp,\n\t\tDeaths as integer,\n\t\tLat as boolean,\n\t\tLon as boolean,\n\t\tProvince as string,\n\t\tRecovered as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> source2\nsource1, source2 union(byName: true,\n\tpartitionBy('hash', 1))~> Union1\nUnion1 select(mapColumn(\n\t\tActive,\n\t\tCity,\n\t\tCityCode,\n\t\tConfirmed,\n\t\tCountry,\n\t\tCountryCode,\n\t\tDate,\n\t\tDeaths,\n\t\tLat,\n\t\tLon,\n\t\tProvince,\n\t\tRecovered\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\ttruncate: true,\n\tmapColumn(\n\t\tActive,\n\t\tCity,\n\t\tCityCode,\n\t\tConfirmed,\n\t\tCountry,\n\t\tCountryCode,\n\t\tDate,\n\t\tDeaths,\n\t\tLat,\n\t\tLon,\n\t\tProvince,\n\t\tRecovered\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}