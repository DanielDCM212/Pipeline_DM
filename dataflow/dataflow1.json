{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json2",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "JsonToColumns"
				},
				{
					"name": "DeleteNullData"
				},
				{
					"name": "InsertColumnCountry"
				},
				{
					"name": "ReduceData"
				},
				{
					"name": "ChangeFormat"
				},
				{
					"name": "InputNull"
				},
				{
					"name": "MapColumns"
				},
				{
					"name": "MinMax"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Union1"
				},
				{
					"name": "Aggregate1"
				}
			],
			"script": "source(output(\n\t\tCountry as string,\n\t\tCountryCode as string,\n\t\tProvince as string,\n\t\tCity as string,\n\t\tCityCode as string,\n\t\tLat as string,\n\t\tLon as string,\n\t\tConfirmed as string,\n\t\tDeaths as string,\n\t\tRecovered as string,\n\t\tActive as string,\n\t\tDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> source1\nsource(output(\n\t\tDate as date 'yyyy-MM-dd',\n\t\tDeaths as integer '000',\n\t\tRecoveries as integer '000',\n\t\t{Total confirmed} as integer '000'\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> source2\nsource1 derive(Fecha = split(Date,'T')[1],\n\tpartitionBy('hash', 1)) ~> JsonToColumns\nJsonToColumns select(mapColumn(\n\t\tCountry,\n\t\tConfirmed,\n\t\tDeaths,\n\t\tRecovered,\n\t\tActive,\n\t\tDate = Fecha\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DeleteNullData\nsource2 derive(Country = toString('mexico'),\n\tpartitionBy('hash', 1)) ~> InsertColumnCountry\nDeleteNullData select(mapColumn(\n\t\tCountry,\n\t\tConfirmed,\n\t\tDeaths,\n\t\tRecovered,\n\t\tDate\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ReduceData\nReduceData derive(Date = toDate(Date, 'yyyy-MM-dd'),\n\t\tConfirmed = toInteger(Confirmed),\n\t\tDeaths = toInteger(Deaths),\n\t\tRecovered = toInteger(Recovered)) ~> ChangeFormat\nInsertColumnCountry derive(Deaths = iif(isNull(Deaths), 0, Deaths),\n\t\tRecoveries = iif(isNull(Recoveries), 0, Recoveries),\n\tpartitionBy('hash', 1)) ~> InputNull\nInputNull select(mapColumn(\n\t\tDate,\n\t\tDeaths,\n\t\tRecovered = Recoveries,\n\t\tConfirmed = {Total confirmed},\n\t\tCountry\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MapColumns\nChangeFormat aggregate(Min_Deaths = min(Deaths),\n\t\tMax_Deaths = max(Deaths),\n\tpartitionBy('hash', 1)) ~> MinMax\nChangeFormat derive(Deaths = (Deaths-0)/(221052-0),\n\tpartitionBy('hash', 1)) ~> DerivedColumn1\nChangeFormat, MinMax union(byName: true)~> Union1\nUnion1 aggregate(Min_Deaths = max(Min_Deaths)) ~> Aggregate1"
		}
	}
}